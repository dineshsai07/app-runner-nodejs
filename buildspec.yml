version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - sudo dockerd
      - docker images
      - echo Building the Docker image...
      - docker build -t $ECR_REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $ECR_REPOSITORY_URI:$TAG


# version: 0.2

# phases:
#   pre_build:
#     commands:
#         - echo Logging in to Amazon ECR...
#         - aws --version
#         - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
#         - curl -fsSL https://get.docker.com -o get-docker.sh
#         - sh get-docker.sh
#         - sudo usermod -aG docker ec2-user
#         - dockerd
#   build:
#     commands:
#       - echo Build started on `date`
#       - docker images
#       - echo Building the Docker image...
#       - docker build -t $ECR_REPOSITORY_URI:$TAG .

#   post_build:
#     commands:
#       - docker push $ECR_REPOSITORY_URI:$TAG

# version: 0.2

# phases:
#   pre_build:
#     commands:
#       - echo Checking if Docker is available...
#       - docker version || (echo "Docker is not installed. Installing Docker..." && yum update -y && yum install -y docker)
#       - echo Starting Docker manually...
#       - nohup dockerd >/dev/null 2>&1 &
#       - timeout 15 sh -c "until docker info >/dev/null 2>&1; do sleep 1; done"

#   build:
#     commands:
#       - ls -l
#       - echo Building the Docker image...
#       - docker build -t $ECR_REPOSITORY_URI:$TAG .
#       - echo Pushing the Docker image to ECR...
#       - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
#       - docker push $ECR_REPOSITORY_URI:$TAG

